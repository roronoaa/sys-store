<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：当前XML文件用于配置哪个接口中抽象方法对应的SQL语句 -->
<mapper namespace="cn.tedu.store.mapper.UserMapper">

	<!--基于用户id更新用户头像路径-->
	<!--Integer updateAvatar(@Param("uid")Integer uid,
                         @Param("avatar")String avatar,
                         @Param("modifiedUser")String modifiedUser,
                         @Param("modifiedTime")Date modifiedTime)-->
	<update id="updateAvatar">
		update
			t_user
		set
			avatar=#{avatar},
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		where
			uid=#{uid}
	</update>




	<!--基于用户名更新用户信息-->
	<!--Integer updateUserInfo(UserEntity user)-->
	<update id="updateUserInfo">
		update
		    t_user
		set
			phone=#{phone},
			email=#{email},
			gender=#{gender},
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		where
			username=#{username}
	</update>


	<!--基于用户id查询用户信息-->
	<!--UserEntity findByUid(Integer uid)-->
	<select id="findByUid" resultMap="userMap">
		select
		    password, salt, is_delete
		from
			t_user
		where
			uid=#{uid}
	</select>

	<!--基于用户id更新用户密码-->
	<!--Integer updatePassword(@Param("uid") Integer uid,
                           @Param("password")String password,
                           @Param("modifiedUser")String modifiedUser,
                           @Param("modifiedTime")Date modifiedTime)-->
	<update id="updatePassword">
		update
		    t_user
		set
			password=#{password},
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		where
			uid=#{uid}
	</update>


	<!--添加一条用户记录-->
	<!--Integer insertUser(UserEntity user)-->
	<insert id="insertUser">
		insert into t_user(
			username, password,
			salt, is_delete,
		    phone, email,
		    gender, avatar,
			created_user,created_time,
			modified_user,modified_time
		)values(
		   #{username},  #{password},
		   #{salt}, #{isDelete},
		   #{phone}, #{email},
		   #{gender}, #{avatar},
		   #{createdUser},now(),
		   #{modifiedUser},now()
	   )
	</insert>

	<resultMap id="userMap" type="cn.tedu.store.entity.UserEntity">
		<id column="uid" property="uid" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="salt" property="salt" />
		<result column="is_delete" property="isDelete" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="gender" property="gender" />
		<result column="avatar" property="avatar" />
		<result column="created_user" property="createdUser" />
		<result column="created_time" property="createdTime" />
		<result column="modified_user" property="modifiedUser" />
		<result column="modified_time" property="modifiedTime" />
	</resultMap>

	<!--基于用户名查询用户记录-->
	<!--UserEntity getByUsername(String username)-->
	<select id="getByUsername" resultMap="userMap">
		select * from t_user where username=#{username}
	</select>
	<resultMap id="productMap" type="cn.tedu.store.entity.Product">
		<id column="id" property="id"></id>
		<result column="item_type" property="itemType"/>
		<result column="title" property="title"/>
		<result column="sell_point" property="sellPoint"/>
		<result column="price" property="price"/>
		<result column="num" property="num"/>
		<result column="image" property="image"/>
		<result column="status" property="status"/>
		<result column="priority" property="priority"/>
		<result column="created_user" property="createdUser" />
		<result column="created_time" property="createdTime" />
		<result column="modified_user" property="modifiedUser" />
		<result column="modified_time" property="modifiedTime" />
	</resultMap>
	<select id="queryFavoriteById" resultMap="productMap">
		select * from t_product
		left join t_favorite
		on t_product.id=t_favorite.pid
		where t_favorite.uid=#{uid}
	</select>
	<insert id="insertFavorite">
		insert into t_favorite(
			uid,pid
		)
		values(
			#{uid},#{pid}
		)
	</insert>
	<delete id="deleteFavorite">
		delete from t_favorite
		where uid=#{uid} and pid=#{pid}
	</delete>
</mapper>






